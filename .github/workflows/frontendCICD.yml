name: frontend_CICD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Workspace
      run: ls -R  

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: frontend
      run: npm ci

    - name: Build frontend
      working-directory: frontend
      run: npm run build

    - name: SonarQube frontend Scan
      id: sonarqube
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dproject.settings=frontend/sonar-project.properties
          -Dsonar.sources=frontend  
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Check SonarQube Quality Gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      if: always()
      timeout-minutes: 5
      with:
        scanTaskId: ${{ steps.sonarqube.outputs.scanTaskId }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Upload build files to S3
      run: aws s3 sync frontend/dist s3://${{ secrets.AWS_S3_BUCKET }} --delete

    - name: Trigger CodeDeploy to deploy to EC2
      run: aws deploy create-deployment \
        --application-name webapp \
        --deployment-group-name CodeDeployWebapp \
        --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
        --ignore-application-stop-failures
